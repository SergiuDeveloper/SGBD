BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE Grades_Log';
EXCEPTION
   WHEN OTHERS THEN
      NULL;
END;
/
CREATE TABLE Grades_Log(
    ID                  NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    Grade_ID            NUMBER NOT NULL,
    Old_Grade_Value     NUMBER NULL,
    New_Grade_Value     NUMBER NULL,
    Operation_Type   VARCHAR2(32) NOT NULL,
    Execution_Date      DATE NOT NULL,
    Operation_User      VARCHAR2(64) NOT NULL
);
/
CREATE OR REPLACE TRIGGER t_Grades_Insert_After AFTER INSERT OR UPDATE OR DELETE ON Note
FOR EACH ROW
DECLARE
    current_operation_type   Grades_Log.Operation_Type%TYPE;
BEGIN
    IF :OLD.Valoare != :NEW.Valoare THEN
        CASE
            WHEN INSERTING THEN
                current_operation_type := 'Insert';
            WHEN UPDATING THEN
                current_operation_type := 'Update';
            WHEN DELETING THEN
                current_operation_type := 'Delete';
        END CASE;
    
        INSERT INTO Grades_Log(
            Grade_ID,
            Old_Grade_Value,
            New_Grade_Value,
            Operation_Type,
            Execution_Date,
            Operation_User
        )
        VALUES(
            :NEW.ID,
            :OLD.Valoare,
            :NEW.Valoare,
            current_operation_type,
            CURRENT_DATE,
            USER
        );
    END IF;
END;