DROP TABLE MarciMasini CASCADE CONSTRAINTS;
CREATE TABLE MarciMasini (
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    Marca VARCHAR2(64) UNIQUE
);
/
DROP TABLE Filme CASCADE CONSTRAINTS;
CREATE TABLE Filme (
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    Nume VARCHAR2(64) UNIQUE
);
/
DROP TABLE Carti CASCADE CONSTRAINTS;
CREATE TABLE Carti (
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    Titlu VARCHAR2(128) UNIQUE
);
/
DECLARE
    TYPE marci_masini_type IS TABLE OF MarciMasini.Marca%TYPE;
    marci_masini marci_masini_type := marci_masini_type(
        'Alfa Romeo', 'Audi', 'BMW', 'Chevrolet', 'Chrysler',
        'Citroen', 'Dacia', 'Daewoo', 'Daihatsu', 'Dodge', 'Fiat',
        'Ford', 'Honda', 'Hyundai', 'Ikarus', 'Jaguar', 'Jeep', 'Kia',
        'Lancia', 'Land Rover', 'Lexus', 'Mazda', 'Mercedes', 'Mini',
        'Mitsubishi', 'Nissan', 'Opel', 'Peugeot', 'Porsche',
        'Renault', 'Seat', 'Skoda', 'Smart', 'SsangYong', 'Steyr',
        'Subaru', 'Suzuki', 'Toyota', 'Volkswagen', 'Volvo'
    );
BEGIN
    FOR marci_masini_iterator IN 1..marci_masini.COUNT
    LOOP
        INSERT INTO MarciMasini(Marca) VALUES(marci_masini(marci_masini_iterator));
    END LOOP;
END;
/
DECLARE
    TYPE filme_type IS TABLE OF Filme.Nume%TYPE;
    filme_list filme_type := filme_type(
        'Human Planet', 'Planet Earth', 'Planet Earth II',
        'Around the World in 80 Treasures', 'Galapagos',
        'African Cats', 'Africa', 'Amazonia',
        'Auschwitz: The Nazis and the Final Solution',
        'Maradona by Kusturica', 'Michael Jacksons This Is It',
        'Cosmos: A Space-Time Odyssey', 'Zero Days',
        'Charles Darwin and the Tree of Life'
    );
BEGIN
    FOR film_iterator IN 1..filme_list.COUNT
    LOOP
        INSERT INTO Filme(Nume) VALUES(filme_list(film_iterator));
    END LOOP;
END;
/
DECLARE
    TYPE carti_type IS TABLE OF VARCHAR2(32);
    carti_list carti_type := carti_type(
        'Introducere in ', 'Scurta introducere in ',
        'Enciclopedie - ', 'Tot ce implica '
    );
BEGIN
    FOR curs in (SELECT * FROM cursuri)
    LOOP
        FOR carti_iterator IN 1..carti_list.COUNT
        LOOP
            INSERT INTO Carti(Titlu) VALUES(carti_list(carti_iterator) || curs.titlu_curs);
        END LOOP;
    END LOOP;
END;
/
DROP TABLE InformatiiStudenti;
CREATE TABLE InformatiiStudenti (
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    StudentiID NUMBER UNIQUE REFERENCES Studenti(ID),
    MarciMasiniID NUMBER REFERENCES MarciMasini(ID),
    FilmPreferatID NUMBER REFERENCES Filme(ID),
    UltimulFilmVazutID NUMBER REFERENCES Filme(ID),
    CartePreferataID NUMBER REFERENCES Carti(ID),
    UltimaCarteCititaID NUMBER REFERENCES Carti(ID)
);
/
DECLARE
    minMarciMasiniID NUMBER;
    maxMarciMasiniID NUMBER;
    minFilmeID NUMBER;
    maxFilmeID NUMBER;
    minCartiID NUMBER;
    maxCartiID NUMBER;
    marcaMasina NUMBER;
    filmPreferat NUMBER;
    ultimulFilmVazut NUMBER;
    cartePreferata NUMBER;
    ultimaCarteCitita NUMBER;
BEGIN
    DELETE FROM InformatiiStudenti;

    SELECT MIN(ID) INTO minMarciMasiniID FROM MarciMasini;
    SELECT MAX(ID) INTO maxMarciMasiniID FROM MarciMasini;
    SELECT MIN(ID) INTO minFilmeID FROM Filme;
    SELECT MAX(ID) INTO maxFilmeID FROM Filme;
    SELECT MIN(ID) INTO minCartiID FROM Carti;
    SELECT MAX(ID) INTO maxCartiID FROM Carti;

    FOR student IN (SELECT * FROM studenti)
    LOOP
        SELECT MarciMasini.ID INTO marcaMasina FROM MarciMasini WHERE MarciMasini.ID = ROUND(DBMS_RANDOM.VALUE(minMarciMasiniID, maxMarciMasiniID));
        SELECT Filme.ID INTO filmPreferat FROM Filme WHERE Filme.ID = ROUND(DBMS_RANDOM.VALUE(minFilmeID, maxFilmeID));
        SELECT Filme.ID INTO ultimulFilmVazut FROM Filme WHERE Filme.ID = ROUND(DBMS_RANDOM.VALUE(minFilmeID, maxFilmeID));
        SELECT Carti.ID INTO cartePreferata FROM Carti WHERE Carti.ID = ROUND(DBMS_RANDOM.VALUE(minCartiID, maxCartiID));
        SELECT Carti.ID INTO ultimaCarteCitita FROM Carti WHERE Carti.ID = ROUND(DBMS_RANDOM.VALUE(minCartiID, maxCartiID));
    
        INSERT INTO InformatiiStudenti(StudentiID, MarciMasiniID, FilmPreferatID, UltimulFilmVazutID, CartePreferataID, UltimaCarteCititaID)
        VALUES(
            student.id,
            marcaMasina,
            filmPreferat,
            ultimulFilmVazut,
            cartePreferata,
            ultimaCarteCitita
        );
    END LOOP;
END;
/
SELECT * FROM InformatiiStudenti;